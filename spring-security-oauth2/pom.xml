
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.security.oauth</groupId>
		<artifactId>spring-security-oauth-parent</artifactId>
		<version>2.5.3.BUILD-SNAPSHOT</version>
	</parent>

	<artifactId>spring-security-oauth2</artifactId>
	<name>OAuth2 for Spring Security</name>
	<description>Module for providing OAuth2 support to Spring Security</description>

	<properties>
		<jackson2.version>2.10.5.1</jackson2.version>
		<servlet-api.version>3.0.1</servlet-api.version>
		<spring.security.jwt.version>1.1.1.RELEASE</spring.security.jwt.version>
		<powermock.version>1.7.4</powermock.version>
	</properties>

	<profiles>
		<profile>
			<id>spring5</id>
			<properties>
				<jackson2.version>2.10.5.1</jackson2.version>
				<servlet-api.version>3.1.0</servlet-api.version>
				<powermock.version>1.6.1</powermock.version>
			</properties>
		</profile>
		<profile>
			<id>checkerframework</id>
			<!-- If you omit the activation block, run mvn with "-P checkerframework" to run checkers. -->
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.11.0</version>
						<configuration>
							<fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
							<compilerArguments>
								<Xmaxerrs>10000</Xmaxerrs>
								<Xmaxwarns>10000</Xmaxwarns>
							</compilerArguments>
							<annotationProcessorPaths>
								<path>
									<groupId>com.google.errorprone</groupId>
									<artifactId>error_prone_core</artifactId>
									<version>2.20.0</version>
								</path>
								<path>
									<groupId>edu.ucr.cs.riple.taint</groupId>
									<artifactId>ucrtainting-checker</artifactId>
									<version>0.1</version>
								</path>
								<path>
									<groupId>edu.ucr.cs.riple.annotator</groupId>
									<artifactId>annotator-scanner</artifactId>
									<version>1.3.8-SNAPSHOT</version>
								</path>
							</annotationProcessorPaths>
							<annotationProcessors>
								<!-- Add all the checkers you want to enable here -->
								<annotationProcessor>edu.ucr.cs.riple.taint.ucrtainting.UCRTaintingChecker</annotationProcessor>
							</annotationProcessors>
							<compilerArgs>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
								<arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
								<arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
								<arg>-Awarns</arg>
								<arg>-AannotatedPackages=org.springframework.security.oauth2</arg>
								<arg>-AenableCustomCheck</arg>
								<arg>-AenableSerialization</arg>
								<arg>-AserializationConfigPath=/tmp/ucr-tainting/alfresco-core/taint.xml</arg>
								<arg>-XDcompilePolicy=simple</arg>
								<arg>-parameters</arg>
								<arg>-Xplugin:ErrorProne -XepDisableAllChecks -Xep:AnnotatorScanner:ERROR -XepOpt:AnnotatorScanner:ConfigPath=/tmp/ucr-tainting/alfresco-core/scanner.xml</arg>
							</compilerArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.checkerframework</groupId>
					<artifactId>checker</artifactId>
					<version>3.35.0</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>site</phase>
						<configuration>
							<tasks>
								<mkdir dir="${project.reporting.outputDirectory}/schema" />
								<copy todir="${project.reporting.outputDirectory}/schema">
									<fileset dir="src/main/resources">
										<include name="**/*.xsd" />
									</fileset>
									<mapper type="flatten" />
								</copy>

								<copy file="${project.reporting.outputDirectory}/schema/spring-security-oauth2-2.0.xsd" tofile="${project.reporting.outputDirectory}/schema/spring-security-oauth2.xsd" />

								<zip destfile="${project.reporting.outputDirectory}/sparklr2.zip">
									<zipfileset dir="../samples/oauth2/sparklr" includes="pom.xml src/**" prefix="sparklr" />
								</zip>
								<zip destfile="${project.reporting.outputDirectory}/tonr2.zip">
									<zipfileset dir="../samples/oauth2/tonr" includes="pom.xml src/**" prefix="tonr" />
								</zip>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<!-- In case we test with Spring 4 -->
			<version>${servlet-api.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<!--for the annotations. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>

		<dependency>
			<!--for the annotations. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>

		<dependency>
			<!--for the annotations. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<!--for the annotations. -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-tx</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<dependency>
        	<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.data.redis.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${redis.clients.version}</version>
			<optional>true</optional>
		</dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.10.5</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson2.version}</version>
            <optional>true</optional>
        </dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
            <optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>3.7.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.6</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb-j5</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
